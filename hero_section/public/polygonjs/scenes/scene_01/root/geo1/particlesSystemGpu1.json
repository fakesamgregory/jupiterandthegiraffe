{
	"type": "particlesSystemGpu",
	"nodes": {
		"globals1": {
			"type": "globals"
		},
		"output1": {
			"type": "output"
		},
		"param_mouse": {
			"type": "param",
			"params": {
				"name": "mouse",
				"type": 3
			},
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "vec2"
					}
				]
			}
		},
		"distance1": {
			"type": "distance",
			"params": {
				"p0": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"p1": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "attribute1",
					"output": "val"
				},
				{
					"index": 1,
					"node": "vec2ToVec3_2",
					"output": "vec3"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "p0",
						"type": "vec3"
					},
					{
						"name": "p1",
						"type": "vec3"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"fitTo01_1": {
			"type": "fitTo01",
			"params": {
				"val": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"srcMin": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"srcMax": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					},
					"raw_input": 0.09
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "distance1",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "val",
						"type": "float"
					},
					{
						"name": "srcMin",
						"type": "float"
					},
					{
						"name": "srcMax",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"clamp2": {
			"type": "clamp",
			"params": {
				"value": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"min": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"max": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "fitTo01_1",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value",
						"type": "float"
					},
					{
						"name": "min",
						"type": "float"
					},
					{
						"name": "max",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"easing2": {
			"type": "easing",
			"inputs": [
				{
					"index": 0,
					"node": "clamp2",
					"output": "val"
				}
			]
		},
		"substract1": {
			"type": "substract",
			"params": {
				"sub0": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"sub1": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"sub2": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				}
			},
			"maxInputsCount": 3,
			"inputs": [
				{
					"index": 0,
					"node": "attribute1",
					"output": "val"
				},
				{
					"index": 1,
					"node": "vec2ToVec3_2",
					"output": "vec3"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "sub0",
						"type": "vec3"
					},
					{
						"name": "sub1",
						"type": "vec3"
					},
					{
						"name": "sub2",
						"type": "vec3"
					}
				],
				"out": [
					{
						"name": "substract",
						"type": "vec3"
					}
				]
			}
		},
		"complement1": {
			"type": "complement",
			"params": {
				"in": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "easing2",
					"output": "out"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "in",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"mult1": {
			"type": "mult",
			"params": {
				"mult0": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult1": {
					"type": "vector3",
					"default_value": [
						1,
						1,
						1
					],
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "multAdd9",
					"output": "val"
				},
				{
					"index": 1,
					"node": "substract1",
					"output": "substract"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "mult0",
						"type": "float"
					},
					{
						"name": "mult1",
						"type": "vec3"
					}
				],
				"out": [
					{
						"name": "product",
						"type": "vec3"
					}
				]
			}
		},
		"vec2ToVec3_1": {
			"type": "vec2ToVec3",
			"inputs": [
				{
					"index": 0,
					"node": "mult1",
					"output": "product"
				}
			]
		},
		"multAdd9": {
			"type": "multAdd",
			"params": {
				"value": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"preAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"mult": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					},
					"raw_input": 0.77
				},
				"postAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "complement1",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value",
						"type": "float"
					},
					{
						"name": "preAdd",
						"type": "float"
					},
					{
						"name": "mult",
						"type": "float"
					},
					{
						"name": "postAdd",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"attribute1": {
			"type": "attribute",
			"params": {
				"name": "instancePosition",
				"type": 2,
				"texportWhenConnected": 1,
				"in": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				}
			},
			"maxInputsCount": 1,
			"connection_points": {
				"in": [
					{
						"name": "in",
						"type": "vec3"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "vec3"
					}
				]
			}
		},
		"attribute2": {
			"type": "attribute",
			"params": {
				"name": "instancePosition",
				"type": 2,
				"texportWhenConnected": 1,
				"exportWhenConnected": 1,
				"in": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				}
			},
			"maxInputsCount": 1,
			"inputs": [
				{
					"index": 0,
					"node": "add1",
					"output": "sum"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "in",
						"type": "vec3"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "vec3"
					}
				]
			}
		},
		"vec3ToVec2_1": {
			"type": "vec3ToVec2",
			"inputs": [
				{
					"index": 0,
					"node": "attribute1",
					"output": "val"
				}
			]
		},
		"add1": {
			"type": "add",
			"params": {
				"add0": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"add1": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"add2": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				}
			},
			"maxInputsCount": 3,
			"inputs": [
				{
					"index": 0,
					"node": "mix1",
					"output": "mix"
				},
				{
					"index": 1,
					"node": "mult4",
					"output": "product"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "add0",
						"type": "vec3"
					},
					{
						"name": "add1",
						"type": "vec3"
					},
					{
						"name": "add2",
						"type": "vec3"
					}
				],
				"out": [
					{
						"name": "sum",
						"type": "vec3"
					}
				]
			}
		},
		"mix1": {
			"type": "mix",
			"params": {
				"value0": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"value1": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"blend": {
					"type": "float",
					"default_value": 0.5,
					"options": {
						"spare": true
					},
					"raw_input": 0.04
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "attribute3",
					"output": "val"
				},
				{
					"index": 1,
					"node": "null1",
					"output": "val"
				},
				{
					"index": 2,
					"node": "attribute4",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value0",
						"type": "vec3"
					},
					{
						"name": "value1",
						"type": "vec3"
					},
					{
						"name": "blend",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "mix",
						"type": "vec3"
					}
				]
			}
		},
		"null1": {
			"type": "null",
			"params": {
				"in": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "attribute1",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "in",
						"type": "vec3"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "vec3"
					}
				]
			}
		},
		"attribute3": {
			"type": "attribute",
			"params": {
				"name": "restP",
				"type": 2,
				"texportWhenConnected": 1,
				"in": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				}
			},
			"maxInputsCount": 1,
			"connection_points": {
				"in": [
					{
						"name": "in",
						"type": "vec3"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "vec3"
					}
				]
			}
		},
		"param_vel": {
			"type": "param",
			"params": {
				"name": "vel",
				"type": 3
			},
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "vec2"
					}
				]
			}
		},
		"length1": {
			"type": "length",
			"params": {
				"x": {
					"type": "vector2",
					"default_value": [
						0,
						0
					],
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "param_vel",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "x",
						"type": "vec2"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"compare1": {
			"type": "compare",
			"params": {
				"test": 2,
				"value0": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					},
					"raw_input": 0.1
				},
				"value1": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "length1",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value0",
						"type": "float"
					},
					{
						"name": "value1",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "bool"
					}
				]
			}
		},
		"twoWaySwitch1": {
			"type": "twoWaySwitch",
			"params": {
				"condition": {
					"type": "boolean",
					"default_value": false,
					"options": {
						"spare": true
					}
				},
				"ifTrue": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					},
					"raw_input": 1
				},
				"ifFalse": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "compare1",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "condition",
						"type": "bool"
					},
					{
						"name": "ifTrue",
						"type": "float"
					},
					{
						"name": "ifFalse",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"attribute4": {
			"type": "attribute",
			"params": {
				"name": "active",
				"texportWhenConnected": 1,
				"in": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"maxInputsCount": 1,
			"connection_points": {
				"in": [
					{
						"name": "in",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"attribute5": {
			"type": "attribute",
			"params": {
				"name": "active",
				"texportWhenConnected": 1,
				"exportWhenConnected": 1,
				"in": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"maxInputsCount": 1,
			"inputs": [
				{
					"index": 0,
					"node": "clamp1",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "in",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"add2": {
			"type": "add",
			"params": {
				"add0": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"add1": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"add2": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"maxInputsCount": 3,
			"inputs": [
				{
					"index": 0,
					"node": "multAdd1",
					"output": "val"
				},
				{
					"index": 1,
					"node": "mult2",
					"output": "product"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "add0",
						"type": "float"
					},
					{
						"name": "add1",
						"type": "float"
					},
					{
						"name": "add2",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "sum",
						"type": "float"
					}
				]
			}
		},
		"mult2": {
			"type": "mult",
			"params": {
				"mult0": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult1": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult2": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				}
			},
			"maxInputsCount": 3,
			"inputs": [
				{
					"index": 0,
					"node": "multAdd9",
					"output": "val"
				},
				{
					"index": 1,
					"node": "twoWaySwitch1",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "mult0",
						"type": "float"
					},
					{
						"name": "mult1",
						"type": "float"
					},
					{
						"name": "mult2",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "product",
						"type": "float"
					}
				]
			}
		},
		"multAdd1": {
			"type": "multAdd",
			"params": {
				"value": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"preAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					},
					"raw_input": -0.001
				},
				"mult": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"postAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "attribute4",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value",
						"type": "float"
					},
					{
						"name": "preAdd",
						"type": "float"
					},
					{
						"name": "mult",
						"type": "float"
					},
					{
						"name": "postAdd",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"clamp1": {
			"type": "clamp",
			"params": {
				"value": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"min": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"max": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "add2",
					"output": "sum"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value",
						"type": "float"
					},
					{
						"name": "min",
						"type": "float"
					},
					{
						"name": "max",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"mult3": {
			"type": "mult",
			"params": {
				"mult0": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult1": {
					"type": "vector3",
					"default_value": [
						1,
						1,
						1
					],
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "twoWaySwitch1",
					"output": "val"
				},
				{
					"index": 1,
					"node": "vec2ToVec3_1",
					"output": "vec3"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "mult0",
						"type": "float"
					},
					{
						"name": "mult1",
						"type": "vec3"
					}
				],
				"out": [
					{
						"name": "product",
						"type": "vec3"
					}
				]
			}
		},
		"vec2ToVec3_2": {
			"type": "vec2ToVec3",
			"params": {
				"z": -0.03
			},
			"inputs": [
				{
					"index": 0,
					"node": "param_mouse",
					"output": "val"
				}
			]
		},
		"maxLength1": {
			"type": "maxLength",
			"params": {
				"val": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"max": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "multAdd2",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "val",
						"type": "vec3"
					},
					{
						"name": "max",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "vec3"
					}
				]
			}
		},
		"multAdd2": {
			"type": "multAdd",
			"params": {
				"value": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"preAdd": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"mult": {
					"type": "vector3",
					"default_value": [
						1,
						1,
						1
					],
					"options": {
						"spare": true
					},
					"raw_input": [
						0.92,
						0.92,
						0.92
					]
				},
				"postAdd": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "mult1",
					"output": "product"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value",
						"type": "vec3"
					},
					{
						"name": "preAdd",
						"type": "vec3"
					},
					{
						"name": "mult",
						"type": "vec3"
					},
					{
						"name": "postAdd",
						"type": "vec3"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "vec3"
					}
				]
			}
		},
		"mult4": {
			"type": "mult",
			"params": {
				"mult0": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult1": {
					"type": "vector3",
					"default_value": [
						1,
						1,
						1
					],
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "constant1",
					"output": "val"
				},
				{
					"index": 1,
					"node": "mult1",
					"output": "product"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "mult0",
						"type": "float"
					},
					{
						"name": "mult1",
						"type": "vec3"
					}
				],
				"out": [
					{
						"name": "product",
						"type": "vec3"
					}
				]
			}
		},
		"constant1": {
			"type": "constant",
			"params": {
				"float": 0.21
			},
			"maxInputsCount": 0,
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		}
	},
	"params": {
		"dataType": 1,
		"material": "../../MAT/meshBasicBuilder1",
		"mouse": {
			"type": "vector2",
			"default_value": [
				0,
				0
			],
			"options": {
				"spare": true,
				"computeOnDirty": true,
				"cook": false
			},
			"raw_input": [
				"ch(\"/EVENTS/raycast1/positionx\")",
				"ch(\"/EVENTS/raycast1/positiony\")"
			]
		},
		"vel": {
			"type": "vector2",
			"default_value": [
				0,
				0
			],
			"options": {
				"spare": true,
				"computeOnDirty": true,
				"cook": false
			},
			"raw_input": [
				"ch(\"/EVENTS/raycast1/velocityx\")",
				"ch(\"/EVENTS/raycast1/velocityy\")"
			]
		}
	},
	"inputs": [
		"instance1"
	],
	"flags": {
		"display": true
	},
	"persisted_config": {
		"shaders_by_name": {
			"instancePosition_SEPARATOR_active": "#include <common>\n\n// removed:\n//// INSERT DEFINE\n\n\n\n// /geo1/particlesSystemGpu1/fitTo01_1\n//\n//\n// FIT\n//\n//\nfloat fit(float val, float srcMin, float srcMax, float destMin, float destMax){\n\tfloat src_range = srcMax - srcMin;\n\tfloat dest_range = destMax - destMin;\n\n\tfloat r = (val - srcMin) / src_range;\n\treturn (r * dest_range) + destMin;\n}\nvec2 fit(vec2 val, vec2 srcMin, vec2 srcMax, vec2 destMin, vec2 destMax){\n\treturn vec2(\n\t\tfit(val.x, srcMin.x, srcMax.x, destMin.x, destMax.x),\n\t\tfit(val.y, srcMin.y, srcMax.y, destMin.y, destMax.y)\n\t);\n}\nvec3 fit(vec3 val, vec3 srcMin, vec3 srcMax, vec3 destMin, vec3 destMax){\n\treturn vec3(\n\t\tfit(val.x, srcMin.x, srcMax.x, destMin.x, destMax.x),\n\t\tfit(val.y, srcMin.y, srcMax.y, destMin.y, destMax.y),\n\t\tfit(val.z, srcMin.z, srcMax.z, destMin.z, destMax.z)\n\t);\n}\nvec4 fit(vec4 val, vec4 srcMin, vec4 srcMax, vec4 destMin, vec4 destMax){\n\treturn vec4(\n\t\tfit(val.x, srcMin.x, srcMax.x, destMin.x, destMax.x),\n\t\tfit(val.y, srcMin.y, srcMax.y, destMin.y, destMax.y),\n\t\tfit(val.z, srcMin.z, srcMax.z, destMin.z, destMax.z),\n\t\tfit(val.w, srcMin.w, srcMax.w, destMin.w, destMax.w)\n\t);\n}\n\n//\n//\n// FIT TO 01\n// fits the range [srcMin, srcMax] to [0, 1]\n//\nfloat fitTo01(float val, float srcMin, float srcMax){\n\tfloat size = srcMax - srcMin;\n\treturn (val - srcMin) / size;\n}\nvec2 fitTo01(vec2 val, vec2 srcMin, vec2 srcMax){\n\treturn vec2(\n\t\tfitTo01(val.x, srcMin.x, srcMax.x),\n\t\tfitTo01(val.y, srcMin.y, srcMax.y)\n\t);\n}\nvec3 fitTo01(vec3 val, vec3 srcMin, vec3 srcMax){\n\treturn vec3(\n\t\tfitTo01(val.x, srcMin.x, srcMax.x),\n\t\tfitTo01(val.y, srcMin.y, srcMax.y),\n\t\tfitTo01(val.z, srcMin.z, srcMax.z)\n\t);\n}\nvec4 fitTo01(vec4 val, vec4 srcMin, vec4 srcMax){\n\treturn vec4(\n\t\tfitTo01(val.x, srcMin.x, srcMax.x),\n\t\tfitTo01(val.y, srcMin.y, srcMax.y),\n\t\tfitTo01(val.z, srcMin.z, srcMax.z),\n\t\tfitTo01(val.w, srcMin.w, srcMax.w)\n\t);\n}\n\n//\n//\n// FIT FROM 01\n// fits the range [0, 1] to [destMin, destMax]\n//\nfloat fitFrom01(float val, float destMin, float destMax){\n\treturn fit(val, 0.0, 1.0, destMin, destMax);\n}\nvec2 fitFrom01(vec2 val, vec2 srcMin, vec2 srcMax){\n\treturn vec2(\n\t\tfitFrom01(val.x, srcMin.x, srcMax.x),\n\t\tfitFrom01(val.y, srcMin.y, srcMax.y)\n\t);\n}\nvec3 fitFrom01(vec3 val, vec3 srcMin, vec3 srcMax){\n\treturn vec3(\n\t\tfitFrom01(val.x, srcMin.x, srcMax.x),\n\t\tfitFrom01(val.y, srcMin.y, srcMax.y),\n\t\tfitFrom01(val.z, srcMin.z, srcMax.z)\n\t);\n}\nvec4 fitFrom01(vec4 val, vec4 srcMin, vec4 srcMax){\n\treturn vec4(\n\t\tfitFrom01(val.x, srcMin.x, srcMax.x),\n\t\tfitFrom01(val.y, srcMin.y, srcMax.y),\n\t\tfitFrom01(val.z, srcMin.z, srcMax.z),\n\t\tfitFrom01(val.w, srcMin.w, srcMax.w)\n\t);\n}\n\n//\n//\n// FIT FROM 01 TO VARIANCE\n// fits the range [0, 1] to [center - variance, center + variance]\n//\nfloat fitFrom01ToVariance(float val, float center, float variance){\n\treturn fitFrom01(val, center - variance, center + variance);\n}\nvec2 fitFrom01ToVariance(vec2 val, vec2 center, vec2 variance){\n\treturn vec2(\n\t\tfitFrom01ToVariance(val.x, center.x, variance.x),\n\t\tfitFrom01ToVariance(val.y, center.y, variance.y)\n\t);\n}\nvec3 fitFrom01ToVariance(vec3 val, vec3 center, vec3 variance){\n\treturn vec3(\n\t\tfitFrom01ToVariance(val.x, center.x, variance.x),\n\t\tfitFrom01ToVariance(val.y, center.y, variance.y),\n\t\tfitFrom01ToVariance(val.z, center.z, variance.z)\n\t);\n}\nvec4 fitFrom01ToVariance(vec4 val, vec4 center, vec4 variance){\n\treturn vec4(\n\t\tfitFrom01ToVariance(val.x, center.x, variance.x),\n\t\tfitFrom01ToVariance(val.y, center.y, variance.y),\n\t\tfitFrom01ToVariance(val.z, center.z, variance.z),\n\t\tfitFrom01ToVariance(val.w, center.w, variance.w)\n\t);\n}\n\n// /geo1/particlesSystemGpu1/easing2\n\nfloat sineInOut(float t) {\n  return -0.5 * (cos(PI * t) - 1.0);\n}\n\n\n\n// /geo1/particlesSystemGpu1/complement1\nfloat complement(float x){return 1.0-x;}\nvec2 complement(vec2 x){return vec2(1.0-x.x, 1.0-x.y);}\nvec3 complement(vec3 x){return vec3(1.0-x.x, 1.0-x.y, 1.0-x.z);}\nvec4 complement(vec4 x){return vec4(1.0-x.x, 1.0-x.y, 1.0-x.z, 1.0-x.w);}\n\n\n\n\n\n\n\n\n// /geo1/particlesSystemGpu1/attribute3\nuniform sampler2D texture_restP;\n\n// /geo1/particlesSystemGpu1/attribute1\nuniform sampler2D texture_instancePosition_SEPARATOR_active;\n\n// /geo1/particlesSystemGpu1/param_mouse\nuniform vec2 v_POLY_param_mouse_val;\n\n// /geo1/particlesSystemGpu1/param_vel\nuniform vec2 v_POLY_param_vel_val;\n\n\n\n\n\nvoid main() {\n\n\tvec2 particleUV = (gl_FragCoord.xy / resolution.xy);\n\n// removed:\n//\t// INSERT BODY\n\n\n\n\t// /geo1/particlesSystemGpu1/attribute3\n\tvec3 v_POLY_attribute3_val = texture2D( texture_restP, particleUV ).xyz;\n\t\n\t// /geo1/particlesSystemGpu1/attribute1\n\tvec3 v_POLY_attribute1_val = texture2D( texture_instancePosition_SEPARATOR_active, particleUV ).xyz;\n\tgl_FragColor.xyz = v_POLY_attribute1_val;\n\t\n\t// /geo1/particlesSystemGpu1/attribute4\n\tfloat v_POLY_attribute4_val = texture2D( texture_instancePosition_SEPARATOR_active, particleUV ).w;\n\tgl_FragColor.w = v_POLY_attribute4_val;\n\t\n\t// /geo1/particlesSystemGpu1/constant1\n\tfloat v_POLY_constant1_val = 0.21;\n\t\n\t// /geo1/particlesSystemGpu1/null1\n\tvec3 v_POLY_null1_val = v_POLY_attribute1_val;\n\t\n\t// /geo1/particlesSystemGpu1/vec2ToVec3_2\n\tvec3 v_POLY_vec2ToVec3_2_vec3 = vec3(v_POLY_param_mouse_val.xy, -0.03);\n\t\n\t// /geo1/particlesSystemGpu1/multAdd1\n\tfloat v_POLY_multAdd1_val = (1.0*(v_POLY_attribute4_val + -0.001)) + 0.0;\n\t\n\t// /geo1/particlesSystemGpu1/length1\n\tfloat v_POLY_length1_val = length(v_POLY_param_vel_val);\n\t\n\t// /geo1/particlesSystemGpu1/mix1\n\tvec3 v_POLY_mix1_mix = mix(v_POLY_attribute3_val, v_POLY_null1_val, v_POLY_attribute4_val);\n\t\n\t// /geo1/particlesSystemGpu1/distance1\n\tfloat v_POLY_distance1_val = distance(v_POLY_attribute1_val, v_POLY_vec2ToVec3_2_vec3);\n\t\n\t// /geo1/particlesSystemGpu1/substract1\n\tvec3 v_POLY_substract1_substract = (v_POLY_attribute1_val - v_POLY_vec2ToVec3_2_vec3 - vec3(0.0, 0.0, 0.0));\n\t\n\t// /geo1/particlesSystemGpu1/compare1\n\tbool v_POLY_compare1_val = (v_POLY_length1_val > 0.0);\n\t\n\t// /geo1/particlesSystemGpu1/fitTo01_1\n\tfloat v_POLY_fitTo01_1_val = fitTo01(v_POLY_distance1_val, 0.0, 0.09);\n\t\n\t// /geo1/particlesSystemGpu1/twoWaySwitch1\n\tfloat v_POLY_twoWaySwitch1_val;\n\tif(v_POLY_compare1_val){\n\tv_POLY_twoWaySwitch1_val = 1.0;\n\t} else {\n\tv_POLY_twoWaySwitch1_val = 0.0;\n\t}\n\t\n\t// /geo1/particlesSystemGpu1/clamp2\n\tfloat v_POLY_clamp2_val = clamp(v_POLY_fitTo01_1_val, 0.0, 1.0);\n\t\n\t// /geo1/particlesSystemGpu1/easing2\n\tfloat v_POLY_easing2_out = sineInOut(v_POLY_clamp2_val);\n\t\n\t// /geo1/particlesSystemGpu1/complement1\n\tfloat v_POLY_complement1_val = complement(v_POLY_easing2_out);\n\t\n\t// /geo1/particlesSystemGpu1/multAdd9\n\tfloat v_POLY_multAdd9_val = (0.77*(v_POLY_complement1_val + 0.0)) + 0.0;\n\t\n\t// /geo1/particlesSystemGpu1/mult1\n\tvec3 v_POLY_mult1_product = (v_POLY_multAdd9_val * v_POLY_substract1_substract);\n\t\n\t// /geo1/particlesSystemGpu1/mult2\n\tfloat v_POLY_mult2_product = (v_POLY_multAdd9_val * v_POLY_twoWaySwitch1_val * 1.0);\n\t\n\t// /geo1/particlesSystemGpu1/mult4\n\tvec3 v_POLY_mult4_product = (v_POLY_constant1_val * v_POLY_mult1_product);\n\t\n\t// /geo1/particlesSystemGpu1/add2\n\tfloat v_POLY_add2_sum = (v_POLY_multAdd1_val + v_POLY_mult2_product + 0.0);\n\t\n\t// /geo1/particlesSystemGpu1/add1\n\tvec3 v_POLY_add1_sum = (v_POLY_mix1_mix + v_POLY_mult4_product + vec3(0.0, 0.0, 0.0));\n\t\n\t// /geo1/particlesSystemGpu1/clamp1\n\tfloat v_POLY_clamp1_val = clamp(v_POLY_add2_sum, 0.0, 1.0);\n\t\n\t// /geo1/particlesSystemGpu1/attribute2\n\tgl_FragColor.xyz = v_POLY_add1_sum;\n\t\n\t// /geo1/particlesSystemGpu1/attribute5\n\tgl_FragColor.w = v_POLY_clamp1_val;\n\n\n\n\n}"
		},
		"texture_allocations": {
			"writable": [
				{
					"instancePosition_SEPARATOR_active": [
						{
							"name": "instancePosition",
							"size": 3,
							"nodes": [
								"/geo1/particlesSystemGpu1/attribute2",
								"/geo1/particlesSystemGpu1/attribute1"
							]
						},
						{
							"name": "active",
							"size": 1,
							"nodes": [
								"/geo1/particlesSystemGpu1/attribute5",
								"/geo1/particlesSystemGpu1/attribute4"
							]
						}
					]
				}
			],
			"readonly": [
				{
					"restP": [
						{
							"name": "restP",
							"size": 3,
							"nodes": [
								"/geo1/particlesSystemGpu1/attribute3"
							]
						}
					]
				}
			]
		},
		"param_uniform_pairs": [
			[
				"mouse",
				"v_POLY_param_mouse_val"
			],
			[
				"vel",
				"v_POLY_param_vel_val"
			]
		],
		"uniforms_owner": {
			"metadata": {
				"version": 4.5,
				"type": "Material",
				"generator": "Material.toJSON"
			},
			"uuid": "/geo1/particlesSystemGpu1-main",
			"type": "ShaderMaterial",
			"depthFunc": 3,
			"depthTest": true,
			"depthWrite": true,
			"colorWrite": true,
			"stencilWrite": false,
			"stencilWriteMask": 255,
			"stencilFunc": 519,
			"stencilRef": 0,
			"stencilFuncMask": 255,
			"stencilFail": 7680,
			"stencilZFail": 7680,
			"stencilZPass": 7680,
			"glslVersion": null,
			"uniforms": {
				"v_POLY_param_mouse_val": {
					"type": "v2",
					"value": [
						0.20164548501770294,
						0.26299063431911546
					]
				},
				"v_POLY_param_vel_val": {
					"type": "v2",
					"value": [
						0.26196640340946303,
						4.584412059665515
					]
				}
			},
			"vertexShader": "\nvoid main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n",
			"fragmentShader": "\nvoid main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}\n",
			"shadowSide": null,
			"lights": false
		}
	}
}