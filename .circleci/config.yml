vm_settings: &vm_settings
  working_directory: ~/app
  docker:
    - image: circleci/node:10.9.0-browsers

version: 2
jobs:
  build:
    <<: *vm_settings
    steps:
      - checkout

      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run:
          name: Install dependencies
          command: npm install

      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}

      - run:
          name: Replace Environment Variables
          command: |
            sed -i -e s/GOOGLE_MAPS_API_KEY/$GOOGLE_MAPS_API_KEY/g src/environments/environment.ts
            sed -i -e s/GOOGLE_MAPS_API_KEY/$GOOGLE_MAPS_API_KEY/g src/environments/environment.prod.ts
            sed -i -e s/FIREBASE_API_KEY/$FIREBASE_API_KEY/g src/environments/environment.ts
            sed -i -e s/FIREBASE_API_KEY/$FIREBASE_API_KEY/g src/environments/environment.prod.ts

      - run:
          name: Build project
          command: npm run build

      - persist_to_workspace:
          root: dist
          paths:
            - .

  deploy_dev:
    working_directory: ~/app
    docker:
      - image: circleci/python:latest
    steps:
      - attach_workspace:
          at: ~/app/dist

      - run:
          name: Install awscli
          command: sudo pip install awscli

      - run:
          name: Add robots TXT file
          command: |
            echo 'User-agent: *' >> ~/app/dist/jupiter-and-the-giraffe/robots.txt
            echo 'Disallow: /' >> ~/app/dist/jupiter-and-the-giraffe/robots.txt

      - run:
          name: AWS Sync
          command: aws --region eu-west-1 s3 sync ./dist/jupiter-and-the-giraffe s3://dev.jupiterandthegiraffe.com/ --acl public-read --exact-timestamps --delete || return 1

  build_deploy_prod:
    <<: *vm_settings
    steps:
      - checkout

      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run:
          name: Install dependencies
          command: npm install

      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}

      - run:
          name: Install Serverless CLI and dependencies
          command: npm i serverless

      - run:
          name: Replace Environment Variables
          command: |
            sed -i -e s/GOOGLE_MAPS_API_KEY/$GOOGLE_MAPS_API_KEY/g src/environments/environment.ts
            sed -i -e s/GOOGLE_MAPS_API_KEY/$GOOGLE_MAPS_API_KEY/g src/environments/environment.prod.ts
            sed -i -e s/FIREBASE_API_KEY/$FIREBASE_API_KEY/g src/environments/environment.ts
            sed -i -e s/FIREBASE_API_KEY/$FIREBASE_API_KEY/g src/environments/environment.prod.ts

      - run:
          name: Deploy Severless
          command: npm run build:prod:deploy

  invalidate_code:
    working_directory: ~/app
    docker:
      - image: circleci/python:latest
    steps:
      - run:
          name: Install awscli
          command: sudo pip install awscli

      - run:
          name: Invalidate code
          command: aws cloudfront create-invalidation --distribution-id E24T90EA7EBZTQ --paths /*

  test:
    <<: *vm_settings
    steps:
      - checkout

      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run:
          name: Install dependencies
          command: npm install

      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}

      - run: npm run lint

workflows:
  version: 2
  build_and_test:
    jobs:
      - test:
          filters:
            branches:
              ignore: master

      - build:
          requires:
            - test
          filters:
            branches:
              ignore: master

  build_and_deploy_dev:
    jobs:
      - test:
          filters:
            branches:
              only: master

      - build:
          requires:
            - test
          filters:
            branches:
              only: master

      - deploy_dev:
          requires:
            - build
          filters:
            branches:
              only: master

  build_and_deploy_prod:
    jobs:
      - test:
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/

      - hold:
          type: approval
          requires:
            - test
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/

      - build_deploy_prod:
          requires:
            - hold
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
      
      - invalidate_code:
          requires:
            - build_deploy_prod
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
